#TODO[MT]: implement nginx config
#Есть три сервиса:
#1)minio
#Хранит загруженные файлы в бакете images
#S3 протокол

#2)uploader
#Принимает файл, если он картинка сжимает и загружает его в minio
#POST /v1/upload

#3)security
#Регистрация пользователя POST /v1/user
#Получение информации о пользователе GET /v1/user
#Логин пользователя POST /v1/token
#Проверка токена GET /v1/token/validation


#Необходимо воспользоваться любым балансировщиком и сделать API Gateway:
#POST /v1/register
#Анонимный доступ.
#Запрос направляется в сервис security POST /v1/user

#POST /v1/token
#Анонимный доступ.
#Запрос направляется в сервис security POST /v1/token

#GET /v1/user
#Проверка токена. Токен ожидается в заголовке Authorization. Токен проверяется через вызов сервиса security GET /v1/token/validation/
#Запрос направляется в сервис security GET /v1/user

#POST /v1/upload
#Проверка токена. Токен ожидается в заголовке Authorization. Токен проверяется через вызов сервиса security GET /v1/token/validation/
#Запрос направляется в сервис uploader POST /v1/upload

#GET /v1/user/{image}
#Проверка токена. Токен ожидается в заголовке Authorization. Токен проверяется через вызов сервиса security GET /v1/token/validation/
#Запрос направляется в сервис minio GET /images/{image}


###Как тестировать
#1)Получить токен
#curl -X POST -H 'Content-Type: application/json' -d '{"login":"bob", "password":"qwe123"}' http://localhost/token
#Пример:
#curl -X POST -H 'Content-Type: application/json' -d '{"login":"bob", "password":"qwe123"}' http://localhost/token 
# eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJib2IifQ.hiMVLmssoTsy1MqbmIoviDeFPvo-nCd92d4UFiN2O2I

#2)Test
# Использовать полученный токен для загрузки картинки
#curl -X POST -H 'Authorization: Bearer <TODO: INSERT TOKEN>' -H 'Content-Type: octet/stream' --data-binary @1.jpg http://localhost/upload
#Пример:
#$ curl -X POST -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJib2IifQ.hiMVLmssoTsy1MqbmIoviDeFPvo-nCd92d4UFiN2O2I' -H 'Content-Type: octet/stream' --data-binary @1.jpg http://localhost/upload
#{"filename":"c31e9789-3fab-4689-aa67-e7ac2684fb0e.jpg"}

#3)Проверить
#Загрузить картинку и проверить что она открывается
#curl localhost/image/<filnename> > <filnename>
#Example
#$ curl localhost/images/c31e9789-3fab-4689-aa67-e7ac2684fb0e.jpg > c31e9789-3fab-4689-aa67-e7ac2684fb0e.jpg
#  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
#                                 Dload  Upload   Total   Spent    Left  Speed
#100 13027  100 13027    0     0   706k      0 --:--:-- --:--:-- --:--:--  748k
#
#$ ls
#c31e9789-3fab-4689-aa67-e7ac2684fb0e.jpg

########################################################################################
########################################################################################

user       nginx;  ## Default: nobody
worker_processes  auto;  ## Default: 1
#error_log  logs/error.log;
#error_log /var/log/nginx/error.log;
#access_log /var/log/nginx/access.log;

#pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
    #error_log /var/log/nginx/error.log;
    #access_log /var/log/nginx/access.log;

    server {
        listen       8080;
        server_name	localhost 127.0.0.1 192.168.80.98;


	#Регистрация
	#POST http://localhost:80/register
	#TO
        #POST http://security:3000/v1/user
        location  /register {
           #Запрос направляется в сервис security POST /v1/user
           rewrite ^/register /v1/user break;
           proxy_pass http://security:3000;
        }

	#Проверка Токена
	#GET http://localhost:80/user
	#TO
        #GET http://security:3000/v1/user
        location  /user {
           #Запрос направляется в сервис security GET /v1/user
           rewrite ^/user /v1/token/validation break;
           proxy_pass http://security:3000;
        }



	#1)Получаем Токен
	#POST http://localhost:80/token
	#TO
        #POST http://security:3000/v1/token
        #Пример: curl -X POST -H 'Content-Type: application/json' -d '{"login":"bob", "password":"qwe123"}' http://localhost/token
        location  /token {
           #Заголовок host соответствующего запроса будет изменен на значение переменной $host, которое должно содержать изначально запрошенный хост.
           #proxy_set_header Host $host;

           #Запрос направляется в сервис security POST /v1/token
           rewrite ^/token /v1/token break;
           proxy_pass http://security:3000;
        }

	#2)Загружаем картинку
	#POST http://localhost:80/upload
	#TO
        #POST http://upload:3000/v1/upload
        #Пример: curl -X POST -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJib2IifQ.hiMVLmssoTsy1MqbmIoviDeFPvo-nCd92d4UFiN2O2I' -H 'Content-Type: octet/stream' --data-binary @1.jpg http://localhost/upload
        location  /upload {
           #Запрос направляется в сервис upload POST /v1/upload
           rewrite ^/upload /v1/upload break;
           proxy_pass http://uploader:3000;
        }

	#3)Скачиваем картинку
	#GET http://localhost/images/{image}
	#TO
        #GET http://minio/v1/user/{image}
        #Пример: curl http://localhost/images/0955692f-99ab-48a7-bd55-67378555cdc9.jpg > 0955692f-99ab-48a7-bd55-67378555cdc9.jpg
        location  /images {
           #Запрос направляется в сервис upload POST /v1/upload
           rewrite ^/images/(*.jpg) /data/$1 break;
           proxy_pass http://storage:9000;
        }

    }
}
